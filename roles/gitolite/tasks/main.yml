---
- name: install gitolite
  package: name=gitolite3 state=present

- name: make git user
  user: name=git home={{ path }} createhome=no

- name: fix home permissions
  file: state=directory owner=git group=git path="{{ path }}"

- name: install gitconfig
  template: src=gitconfig dest={{ path }}/.gitconfig owner=git group=git mode=0600

- name: copy admin key
  copy: src=../pubkeys/{{ item }} dest={{ path }}/{{ item }} owner=git group=git mode=0600
  with_items: "{{ admin_keys }}"
  register: publickeys

- name: install gitolite.rc
  template: src=gitolite.rc dest={{ path }}/.gitolite.rc owner=git group=git mode=0600


- name: install gitolite
  become: true
  become_user: git
  command: gitolite setup -pk {{ item }}
  with_items: "{{ admin_keys }}"
  when: publickeys.changed


- name: clone server gitolite-admin
  become: true
  become_user: git
  command: git clone ./repositories/gitolite-admin.git
  ignore_errors: yes

- name: install gitolite.conf
  template: src=gitolite.conf dest={{ path }}/gitolite-admin/conf/gitolite.conf owner=git group=git mode=0644
  register: config

- name: commit gitolite config
  become: true
  become_user: git
  command: git commit -am "Added new config"
  args:
      chdir: ./gitolite-admin
  when: config.changed

- name: push config
  become: true
  become_user: git
  command: gitolite push
  args:
      chdir: ./gitolite-admin
  when: config.changed

- name: delete gitolite-admin repo
  file: path={{ path }}/gitolite-admin state=absent

