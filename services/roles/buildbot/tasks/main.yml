---

- name: install dependencies
  package: name={{ item }} state=present
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg2
    - software-properties-common

- name: install docker repo key
  apt_key:
    url: "https://download.docker.com/linux/debian/gpg"
    state: present

- name: install docker repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
    state: present

- name: install docker
  package: name=docker-ce state=present

- name: install buildbot
  pip: name={{ item }} state=present executable=pip3
  with_items:
    - buildbot
    - buildbot-www
    - buildbot-worker
    - buildbot-waterfall-view
    - buildbot-console-view 
    - service_identity

- name: make build user
  user: name=build shell=/bin/bash home={{ path }} createhome=no

- name: fix home permissions
  file: state=directory owner=build group=build path="{{ path }}"

- name: create master
  become_user: build
  become: true
  command: buildbot create-master master
  args:
      chdir: "{{ path }}"

- name: clone repository
  git:
    repo: "https://github.com/Foxboron/arch-auto-build.git"
    dest: "{{ path }}/arch-auto-builder"


- name: install build script
  copy: remote_src=True src="{{ path }}/arch-auto-builder/bin/build-package" dest="/usr/bin/build-package" mode=755

- name: install master.cfg 
  copy: remote_src=True src="{{ path }}/arch-auto-builder/buildbot/master.cfg" dest="{{path}}/master/master.cfg"
  notify:
      - reload buildbot
# - name: setup master config 
#   template: src=master.cfg.j2 dest={{ path }}/master/master.cfg owner=build group=build mode=644

- name: install letsencrypt cert
  command: certbot certonly --rsa-key-size 4096 --renew-by-default --webroot -w /var/www/challenges -d {{ domain }} creates=/etc/letsencrypt/live/{{domain}}


- name: make nginx log dir
  file: path=/var/log/nginx/{{ domain }} state=directory owner=www-data group=adm mode=755

- name: set up nginx
  template: src=../templates/nginx.d.conf.j2 dest=/etc/nginx/nginx.d/{{ domain }}.conf owner=root group=root mode=644
  notify:
    - restart nginx

# - name: create docker container
#   command: ./build-docker.sh foxboron
#   args:
#       chdir: {{ path }}/arch-auto-build/docker

